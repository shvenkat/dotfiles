

# ----------  OPTIONS  -------------------------------------------------------

shopt -s cdspell
# set -o notify
set -o ignoreeof
# shopt -s nocaseglob


# ----------  HISTORY  -------------------------------------------------------

shopt -s histappend
export HISTCONTROL="ignoredups"
export HISTSIZE=1000000
export HISTFILESIZE=1000000
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls'
#export PROMPT_COMMAND="history -a"


# ----------  COMPLETION  ----------------------------------------------------

# These completion tuning parameters change the default behavior of bash_completion:

# Define to avoid stripping description in --option=description of './configure --help'
COMP_CONFIGURE_HINTS=1

# Define to avoid flattening internal contents of tar files
COMP_TAR_INTERNAL_PATHS=1

# If this shell is interactive, turn on programmable completion enhancements.
# Any completions you add in ~/.bash_completion are sourced last.
if ! shopt -oq posix && echo $- | grep -q i; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  elif [ -f /usr/local/etc/bash_completion ]; then
    . /usr/local/etc/bash_completion
  elif [ -f /usr/local/etc/profile.d/bash_completion.sh ]; then
    . /usr/local/etc/profile.d/bash_completion.sh
  fi
fi


# ----------  PROMPT  --------------------------------------------------------

# If the shell is interactive and the terminal suitable, customize the prompt.
if [[ -n "$PS1" && "$TERM" != 'dumb' ]] && tty &>/dev/null; then
    # Abbreviates a path ($1), e.g. /home/me/some/directory -> ~/so/direc.
    __shrink_path () {
        p="${1#${HOME}}"
        if [[ "${PWD}" != "${p}" ]]; then
            echo -n "~"
        fi
        local OIFS="$IFS"
        IFS=/
        for q in ${p:1}; do
            echo -n "/${q:0:2}"
        done
        echo -n "${q:2:3}"
        IFS="$OIFS"
    }
    # Updates $PS1.
    __update_prompt () {
        local prompt_color prompt_suffix
        if [[ -n "$VIRTUAL_ENV" ]]; then
            prompt_color="\[\033[91m\]"
        else
            prompt_color="\[\033[30m\]"
        fi
        if [[ "$OSTYPE" =~ ^darwin ]]; then
            prompt_suffix="◀▶"
        else
            prompt_suffix=">>"
        fi
        PS1="\[\033[7m\] \[\033[0m\]${HOSTNAME:0:4} $(__shrink_path "$PWD") ${prompt_color}${prompt_suffix}\[\033[0m\] "
    }
    # Set the prompt now.
    __update_prompt

    # Shows the non-zero exit code of the previous command.
    __retval=0
    __show_exit () {
        if [[ "$__retval" -ne 0 ]]; then
            echo -e "== \033[31mexit ${__retval}\033[0m =="
        fi
    }
    PROMPT_COMMAND='__retval=$?; __show_exit; echo; __update_prompt; history -a'
fi
