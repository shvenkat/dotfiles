// From: https://github.com/ZoeBijl/table-of-contents/blob/main/source/bookmarklet.js
// Transform with: tail -n+2 | sed -e 's/^ *//g' | grep -vE '^//' | grep -v '^$' | tr -d '\n'
// Prepend with javascript: to make a bookmarklet.
(()=>{
    let headings = document.querySelectorAll('h1,h2,h3,h4,h5,h6,[role=heading]');
    if (headings.length < 1) return;

    let containerId = 'toc-bookmarklet';
    let titleId = `${containerId}-title`;

    // TOC container is a dialog for accessibility.
    let container = document.createElement('div');
    container.id = containerId;
    container.role = 'dialog';
    container.setAttribute('aria-labelledby', titleId);
    container.tabindex = -1;

    // TOC has a header with a title and close button.
    let header = document.createElement('header');
    container.appendChild(header);

    let title = document.createElement('h1');
    title.id = titleId;
    title.innerText = 'Table of Contents';
    header.appendChild(title);

    let closeButton = document.createElement('button');
    closeButton.type = 'button';
    closeButton.textContent = 'x';
    closeButton.setAttribute('aria-label', 'Close ToC');
    closeButton.addEventListener('click', () => container.remove());
    header.appendChild(closeButton);

    // A function to extract data from a document heading.
    function getHeadingInfo(heading) {
        let level = heading.nodeName[1];
        if (heading.getAttribute('role') === 'heading') {
            level = heading.getAttribute('aria-level');
        }
        return {
            id: heading.id,
            text: heading.innerText,
            level: parseInt(
                heading.getAttribute('role') === 'heading'
                ? heading.getAttribute('aria-level')
                : heading.nodeName[1]
            )
        };
    };

    // A function to create a TOC element for a document heading.
    function createHeadingListItem(heading, list) {
        let listItem = document.createElement('li');
        let indent = document.createElement('span');
        indent.classList.add('indent');
        indent.innerText = '....'.repeat(heading.level - 1);
        listItem.appendChild(indent);
        if (heading.id) {
            let link = document.createElement('a');
            link.href = `#${heading.id}`;
            link.innerText = heading.text;
            listItem.appendChild(link);
        } else {
            listItem.appendChild(document.createTextNode(heading.text));
        }
        list.appendChild(listItem);
    };

    // Create and populate the TOC with headings in the document.
    let tocList = document.createElement('ol');
    tocList.id = `${containerId}-toc-list`;
    headings.values().map(getHeadingInfo).forEach(
        elem => createHeadingListItem(elem, tocList));
    container.appendChild(tocList);

    // CSS styles are easier to read.
    let styles = document.createElement('style');
    styles.setAttribute('type', 'text/css');
    styles.id = "toc-style";
    styles.innerText =
        `#${containerId} {
            display: inline-block;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 9999;
            margin: 0.5em;
            padding: 0 .5em;
            max-width: 20em;
            max-height: calc(34% - 1em);
            overflow-y: auto;
            border: .0625em solid rgba(0,0,0,.3);
            border-radius: .25em;
            box-shadow: 0 .25em .5em rgba(0,0,0,.3);
            color: black;
            font-family: sans-serif;
            font-size: max(1em, 14px);
            line-height: 1.5;
            background-color: white;
        }
        #${containerId}:focus-visible,
        #${containerId}:focus {
            outline: 2px solid transparent;
            box-shadow:
                0 0 0 .125em white,
                0 0 0 .25em hsl(260, 30%, 53%),
                0 .25em .5em rgba(0,0,0,.3);
        }
        #${containerId} header {
            display: grid;
            grid-template-columns: 1.5em auto 1.5em;
            grid-template-areas: 'macButton heading button';
            grid-gap: .5em;
            width: calc(100% + 1em);
            margin: 0 -.5em;
            padding: .5em;
            border-bottom: .0625em solid rgba(0,0,0,.3);
        }
        #${containerId} h1 {
            margin: 0;
            font-family: inherit;
            font-size: 1em;
            font-weight: bold;
            color: hsl(260, 30%, 53%);
            line-height: inherit;
            text-align: center;
            grid-area: heading;
        }
        #${containerId} button {
            width: 1.5em;
            height: 1.5em;
            grid-area: macButton;
            font-family: inherit;
            font-size: inherit;
            text-shadow: 0 -1px 1px #403b44;
            cursor:pointer;
        }
        #${containerId} ol {
            list-style-position: inside;
            list-style-type: none;
            margin: 1em 0;
            padding: 0;
            text-wrap: nowrap;
        }
        #${containerId} li .indent {
            color: #ffffff00;
        }
        #${containerId} a {
            color: hsl(260, 30%, 53%);
        }
        `;

    // Add the top-level TOC elements to the document.
    if (document.getElementById(styles.id)) {
        document.getElementById(styles.id).remove();
    }
    document.head.appendChild(styles);
    if (document.getElementById(container.id)) {
        document.getElementById(container.id).remove();
    }
    document.body.appendChild(container);
    container.focus();
})();
